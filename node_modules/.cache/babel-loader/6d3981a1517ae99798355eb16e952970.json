{"remainingRequest":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/babel-loader/lib/index.js!/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/src/views/MovieDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/src/views/MovieDetail.vue","mtime":1637528771708},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/babel.config.js","mtime":1637224004846},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Vtb3JhbHZpc2lvbmFyeS9Qcm9qZWN0cy9tb3ZpZV9wcm9qL2ZpbmFsX3BqdF9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTW92aWVEZXRhaWwnLAogIG1ldGhvZHM6IHsKICAgIGdldFJldmlld0Zvcm06IGZ1bmN0aW9uIGdldFJldmlld0Zvcm0oKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnTW92aWVSZXZpZXcnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgbW92aWVJZDogdGhpcy5tb3ZpZURhdGEuaWQKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydtb3ZpZURhdGEnXSkpLCB7fSwgewogICAgcmV2aWV3czogZnVuY3Rpb24gcmV2aWV3cygpIHsKICAgICAgcmV0dXJuIHRoaXMubW92aWVEYXRhLnJldmlld19zZXQ7CiAgICB9LAogICAgcG9zdGVyUGF0aDogZnVuY3Rpb24gcG9zdGVyUGF0aCgpIHsKICAgICAgcmV0dXJuICJodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC93NTAwLyIuY29uY2F0KHRoaXMubW92aWVEYXRhLnBvc3Rlcl9wYXRoKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["MovieDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,OAAA,EAAA,KAAA,SAAA,CAAA;AAAA;AAAA,OAAA;AACA;AAHA,GAFA;AAOA,EAAA,QAAA,kCACA,QAAA,CAAA,CAAA,WAAA,CAAA,CADA;AAEA,IAAA,OAFA,qBAEA;AACA,aAAA,KAAA,SAAA,CAAA,UAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AACA,uDAAA,KAAA,SAAA,CAAA,WAAA;AACA;AAPA;AAPA,CAAA","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <img :src=\"posterPath\" class=\"img-fluid\" alt=\"\">\n      </div>\n      <div class=\"col-8\">\n        <h2 class=\"text-start\">{{ movieData.title }}</h2>\n        <p class=\"text-start\">{{ movieData.overview }}</p>\n        <p>{{ movieData }}</p>\n      </div> \n    </div>\n    <div>\n      <span>리뷰 목록</span>\n      <button\n        @click=\"getReviewForm\"\n      >\n        리뷰 작성\n      </button>\n      <div class=\"list-group\">\n        <div \n          class=\"list-group-item list-group-item-action\"\n          v-for=\"review in reviews\" \n          :key=\"review.id\" \n        >\n          <router-link :to=\"{ \n            name: 'ReviewDetail', \n            params: { movieID: movieData.id, reviewId: review.id },        \n            }\">\n            {{ review.userName }} | {{ review.title }}\n          </router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'MovieDetail',\n  methods: {\n    getReviewForm() {\n      this.$router.push({ name: 'MovieReview', params: { movieId: this.movieData.id} })\n    },\n  },\n  computed: {\n    ...mapState(['movieData']),\n    reviews() {\n      return this.movieData.review_set\n    },\n    posterPath() {\n      return `https://image.tmdb.org/t/p/w500/${this.movieData.poster_path}`\n    },\n  },\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views"}]}