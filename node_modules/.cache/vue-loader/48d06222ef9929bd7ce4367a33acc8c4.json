{"remainingRequest":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/src/views/community/Community.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/src/views/community/Community.vue","mtime":1637525024476},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/emoralvisionary/Projects/movie_proj/final_pjt_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29tbXVuaXR5JywKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdEZvcm0oKSB7CiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuaXNMb2dpbikgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ0xvZ2luJyB9KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ1Bvc3QnIH0pCiAgICAgIH0KICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0xvYWRQb3N0cycpCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWydwb3N0cycsICd0b2tlbiddKSwKICB9Cn0K"},{"version":3,"sources":["Community.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Community.vue","sourceRoot":"src/views/community","sourcesContent":["<template>\n  <div>\n    <button @click=\"getPostForm\">글쓰기</button>\n    <p v-for=\"post in this.posts\" :key=post.id>\n      <router-link :to=\"{ \n        name: 'PostDetail', \n        params: { postId: post.id },\n        }\">\n        {{ post.id }} | {{ post.title }} \n      </router-link>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'Community',\n  data: function () {\n    return {\n    }\n  },\n  methods: {\n    getPostForm() {\n      if (!this.$store.state.isLogin) {\n        this.$router.push({ name: 'Login' })\n      } else {\n        this.$router.push({ name: 'Post' })\n      }\n    },\n  },\n  created() {\n    this.$store.dispatch('LoadPosts')\n  },\n  computed: {\n    ...mapState(['posts', 'token']),\n  }\n}\n</script>\n\n<style>\n\n</style>"]}]}